{"version":3,"sources":["components/Product/index.js","components/ProductList/index.js","App.js","serviceWorker.js","index.js"],"names":["Product","props","useState","isHovered","setIsHovered","isSelected","setIsSelected","isHoveredSelected","setIsHoveredSelected","firstSelect","setFirstSelect","title","name","addition","portionsAmount","details","image","weight","disabled","toggleHover","toggleClick","productClass","classNames","product","className","onMouseEnter","onMouseLeave","onClick","map","item","index","key","src","alt","width","height","ProductList","productProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kUA+GeA,G,YA1GC,SAACC,GAAW,IAAD,EACSC,oBAAS,GADlB,mBAClBC,EADkB,KACPC,EADO,OAEWF,oBAAS,GAFpB,mBAElBG,EAFkB,KAENC,EAFM,OAGyBJ,oBAAS,GAHlC,mBAGlBK,EAHkB,KAGCC,EAHD,OAIaN,oBAAS,GAJtB,mBAIlBO,EAJkB,KAILC,EAJK,KAOvBC,EAQEV,EARFU,MACAC,EAOEX,EAPFW,KACAC,EAMEZ,EANFY,SACAC,EAKEb,EALFa,eACAC,EAIEd,EAJFc,QACAC,EAGEf,EAHFe,MACAC,EAEEhB,EAFFgB,OACAC,EACEjB,EADFiB,SAGIC,EAAc,WACdd,IACFG,GAAsBD,GACtBG,GAAe,IAEjBN,GAAcD,IAGViB,EAAc,WACdf,GACFK,GAAe,GAEjBJ,GAAeD,IAGXgB,EAAeC,IAAW,CAC9BC,SAAS,EACT,aAAcpB,EACd,cAAeE,EACf,cAAea,IAGjB,OACE,yBAAKM,UAAWH,GACd,yBACEG,UAAU,gBACVC,aAAcN,EACdO,aAAcP,EACdQ,QAASP,GAET,yBAAKI,UAAU,iBACZrB,GAAaE,IAAeI,EAC3B,0BAAMe,UAAU,wBAAhB,2FAEA,0BAAMA,UAAU,kBAAkBb,GAEpC,wBAAIa,UAAU,iBAAiBZ,GAC/B,yBAAKY,UAAU,qBAAqBX,GACpC,yBAAKW,UAAU,oBACb,yBAAKA,UAAU,qBACb,gCAASV,GADX,4CAGA,yBAAKU,UAAU,iBACZT,EAAQa,KAAI,SAACC,EAAMC,GAAP,OACX,yBAAKC,IAAKD,GAAQD,QAIxB,yBACEL,UAAU,iBACVQ,IAAKhB,EACLiB,IAAKtB,EACLuB,MAAM,MACNC,OAAO,QAET,yBAAKX,UAAU,mBACZP,EACD,yBAAKO,UAAU,wBAAf,mBAIN,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,yCAAhB,0IAEE,0BACEA,UAAU,eACVC,aAAcN,EACdO,aAAcP,EACdQ,QAASP,GAJX,4BAFF,KAYCf,EACC,0BAAMmB,UAAU,qBAAhB,qPAGE,KACHN,EACC,0BAAMM,UAAU,uBAAhB,4DACgBX,EADhB,mEAGE,SCxDGuB,G,MA7CK,WAkClB,OACE,wBAAIZ,UAAU,gBAlCC,CACf,CACEb,MAAO,+IACPC,KAAM,6CACNC,SAAU,+CACVC,eAAgB,KAChBC,QAAS,CAAC,8EACVC,MACE,gFACFC,OAAQ,OAEV,CACEN,MAAO,+IACPC,KAAM,6CACNC,SAAU,wCACVC,eAAgB,KAChBC,QAAS,CAAC,gFACVC,MACE,gFACFC,OAAQ,KAEV,CACEN,MAAO,+IACPC,KAAM,6CACNC,SAAU,wCACVC,eAAgB,MAChBC,QAAS,CAAC,qFAAqB,+FAC/BC,MACE,gFACFC,OAAQ,IACRC,UAAU,IAKAU,KAAI,SAACS,EAAcP,GAAf,OACZ,wBAAIC,IAAKD,GACP,kBAAC,EAAYO,UCzBRC,MAbf,WACE,OACE,yBAAKd,UAAU,OACb,0BAAMA,UAAU,QACd,yBAAKA,UAAU,aACb,kKACA,kBAAC,EAAD,UCEUe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c7988f40.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport \"./../../assets/styles/helpers.scss\";\n\nconst Product = (props) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  const [isHoveredSelected, setIsHoveredSelected] = useState(false);\n  const [firstSelect, setFirstSelect] = useState(true);\n\n  const {\n    title,\n    name,\n    addition,\n    portionsAmount,\n    details,\n    image,\n    weight,\n    disabled,\n  } = props;\n\n  const toggleHover = () => {\n    if (isSelected) {\n      setIsHoveredSelected(!isHoveredSelected);\n      setFirstSelect(false);\n    }\n    setIsHovered(!isHovered);\n  };\n\n  const toggleClick = () => {\n    if (isSelected) {\n      setFirstSelect(true);\n    }\n    setIsSelected(!isSelected);\n  };\n\n  const productClass = classNames({\n    product: true,\n    \"is-hovered\": isHovered,\n    \"is-selected\": isSelected,\n    \"is-disabled\": disabled,\n  });\n\n  return (\n    <div className={productClass}>\n      <div\n        className=\"product__body\"\n        onMouseEnter={toggleHover}\n        onMouseLeave={toggleHover}\n        onClick={toggleClick}\n      >\n        <div className=\"product__main\">\n          {isHovered && isSelected && !firstSelect ? (\n            <span className=\"color-selected-hover\">Котэ не одобряет?</span>\n          ) : (\n            <span className=\"product__title\">{title}</span>\n          )}\n          <h3 className=\"product__name\">{name}</h3>\n          <div className=\"product__addition\">{addition}</div>\n          <div className=\"product__details\">\n            <div className=\"product__portions\">\n              <strong>{portionsAmount}</strong>&nbsp;порций\n            </div>\n            <div className=\"product__gift\">\n              {details.map((item, index) => (\n                <div key={index}>{item}</div>\n              ))}\n            </div>\n          </div>\n          <img\n            className=\"product__image\"\n            src={image}\n            alt={title}\n            width=\"370\"\n            height=\"361\"\n          />\n          <div className=\"product__weight\">\n            {weight}\n            <div className=\"product__weight-unit\">кг</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"product__footer\">\n        <span className=\"is-hidden-disabled is-hidden-selected\">\n          Чего сидишь? Порадуй котэ,&nbsp;\n          <span\n            className=\"product__buy\"\n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n            onClick={toggleClick}\n          >\n            купи\n          </span>\n          .\n        </span>\n        {isSelected ? (\n          <span className=\"is-shown-selected\">\n            Головы щучьи с чесноком да свежайшая сёмгушка.\n          </span>\n        ) : null}\n        {disabled ? (\n          <span className=\"color-disabled-note\">\n            {`Печалька, ${addition} закончился.`}\n          </span>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport Product from \"../Product\";\nimport \"./style.scss\";\n\nconst ProductList = () => {\n  const products = [\n    {\n      title: \"Сказочное заморское яство\",\n      name: \"Нямушка\",\n      addition: \"с фуа-гра\",\n      portionsAmount: \"10\",\n      details: [\"мышь в подарок\"],\n      image:\n        \"https://github.com/s-pyadyshev/funbox-html/blob/master/src/assets/img/cat.png\",\n      weight: \"0.5\",\n    },\n    {\n      title: \"Сказочное заморское яство\",\n      name: \"Нямушка\",\n      addition: \"с рыбой\",\n      portionsAmount: \"40\",\n      details: [\"2 мыши в подарок\"],\n      image:\n        \"https://github.com/s-pyadyshev/funbox-html/blob/master/src/assets/img/cat.png\",\n      weight: \"2\",\n    },\n    {\n      title: \"Сказочное заморское яство\",\n      name: \"Нямушка\",\n      addition: \"с курой\",\n      portionsAmount: \"100\",\n      details: [\"5 мышей в подарок\", \"заказчик доволен\"],\n      image:\n        \"https://github.com/s-pyadyshev/funbox-html/blob/master/src/assets/img/cat.png\",\n      weight: \"5\",\n      disabled: true,\n    },\n  ];\n  return (\n    <ul className=\"product-list\">\n      {products.map((productProps, index) => (\n        <li key={index}>\n          <Product {...productProps} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ProductList;\n","import React from \"react\";\nimport \"./App.scss\";\nimport ProductList from \"./components/ProductList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className=\"main\">\n        <div className=\"container\">\n          <h1>Ты сегодня покормил кота?</h1>\n          <ProductList />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}